# Smithery configuration file for MySQL MCP Server
name: "mysql-mcp-python-server"
description: "MySQL MCP server for database access"
version: "1.0.0"
logo: "./logo.png"

local:
  enabled: true
  installation:
    type: "npm"
    package: "@mysql-mcp/python-server"
    binary: "mysql-mcp-server"

settings:
  configurable: true
  schema:
    type: object
    properties:
      mysqlHost:
        type: string
        description: "MySQL server host address"
        default: "localhost"
      mysqlPort:
        type: integer
        description: "MySQL server port"
        default: 3306
      mysqlUser:
        type: string
        description: "MySQL username"
      mysqlPassword:
        type: string
        description: "MySQL password"
        format: password
      mysqlDatabase:
        type: string
        description: "MySQL database name"
    required:
      - mysqlHost
      - mysqlUser
      - mysqlPassword
      - mysqlDatabase

startCommand:
  type: stdio
  configSchema:
    type: object
    properties:
      mysqlHost:
        type: string
        description: "MySQL host address"
      mysqlPort:
        type: integer
        description: "MySQL port"
        default: 3306
      mysqlUser:
        type: string
        description: "MySQL username"
      mysqlPassword:
        type: string
        description: "MySQL password"
        format: password
      mysqlDatabase:
        type: string
        description: "Database name"
    required:
      - mysqlHost
      - mysqlUser
      - mysqlPassword
  commandFunction: |
    (config) => ({
      command: "python",
      args: ["mcp_server.py"],
      env: {
        MYSQL_HOST: config.mysqlHost,
        MYSQL_PORT: String(config.mysqlPort || 3306),
        MYSQL_USER: config.mysqlUser,
        MYSQL_PASSWORD: config.mysqlPassword,
        MYSQL_DATABASE: config.mysqlDatabase || ""
      }
    })
  exampleConfig:
    mysqlHost: "localhost"
    mysqlUser: "example_user"
    mysqlPassword: "example_password"
    mysqlDatabase: "example_db"

deployment:
  type: "docker"
  dockerfile: "./Dockerfile"
  dockerBuildPath: "."
  healthCheck:
    type: "http"
    path: "/health"
    port: 14000
    interval: "30s"
    timeout: "30s"
    retries: 3
  resources:
    memory: "512Mi"
    cpu: "0.5"
  env:
    - name: PYTHONUNBUFFERED
      value: "1"
    - name: PYTHONPATH
      value: "/app"
  ports:
    - 14000
  websocket:
    enabled: true
    reconnect: true
    timeout: 300000

tools:
  connect_db:
    description: "Connect to a MySQL database"
    parameters:
      properties:
        host:
          type: string
          description: "MySQL server hostname or IP address"
          default: "localhost"
        port:
          type: integer
          description: "MySQL server port"
          default: 3306
        user:
          type: string
          description: "MySQL username"
        password:
          type: string
          description: "MySQL password"
          format: password
        database:
          type: string
          description: "Database name"
      required:
        - host
        - user
        - password
        - database
  list_databases:
    description: "List all databases"
    parameters:
      properties: {}
  list_tables:
    description: "List all tables"
    parameters:
      properties:
        database:
          type: string
          description: "Database name"
  describe_table:
    description: "Show table schema"
    parameters:
      properties:
        table:
          type: string
          description: "Table name"
        database:
          type: string
          description: "Database name"
      required:
        - table
  execute_query:
    description: "Execute SQL query"
    parameters:
      properties:
        query:
          type: string
          description: "SQL query"
        database:
          type: string
          description: "Database name"
      required:
        - query

metadata:
  name: "MySQL MCP Server"
  description: "Secure MySQL database access through Model Context Protocol"
  version: "1.0.0"
  author: "Smithery AI"
  license: "MIT" 